#jinja2: trim_blocks: True,lstrip_blocks: True
{##########################################
Purpose:
Configure VLAN Interface commands for os10 Devices
os10_vlan:
  default_vlan_id : 4
  vlan 100:
      description: "red"
      tagged_members:
        - port: ethernet 1/1/32
          state: present
        - port: ethernet 1/1/31
          state: absent
      untagged_members:
        - port: ethernet 1/1/30
          state: present
        - port: ethernet 1/1/29
          state: present
      state: present
  vlan 888:
      description: "NSX_Cluster"
      untagged_members:
        - port: port-channel 1
          state: "present"
      state: "present"
  vlan 10:
      description: "vlan with anycast GW"
      ip_and_mask: "10.1.1.1/24"
      virtual_gateway_ip: "10.1.1.254"
      virtual_gateway_ipv6: "10:1:1::254"
      state: "present"

#########################################}
{% set port_map = {} %}

{% if os10_vlan is defined and os10_vlan %}
{% for key,value in os10_vlan.items() %}
  {% if key == "default_vlan_id" %}
    {% if value %}
default vlan-id {{ value }}
    {% else %}
no default vlan-id
    {% endif %}
  {% else %}

  {% set vlan_id = key.split(" ") %}
  {% set vlan_vars = os10_vlan[key] %}

  {% if vlan_vars.state is defined and vlan_vars.state == "absent" %}
no interface vlan{{ vlan_id[1] }}
  {% else %}
interface vlan{{ vlan_id[1] }}
    {% if vlan_vars.description is defined %}
      {% if vlan_vars.description %}
        {% if vlan_vars.description|wordcount > 1 %}
 description "{{ vlan_vars.description }}"
        {% else %}
 description {{ vlan_vars.description }}
        {% endif %}
      {% else %}
 no description
      {% endif %}
    {% endif %}

   {% if vlan_vars.ip_and_mask is defined %}
     {% if vlan_vars.ip_and_mask %}
 ip address {{ vlan_vars.ip_and_mask }}
     {% else %}
 no ip address
     {% endif %}
   {% endif %}

   {% if vlan_vars.virtual_gateway_ip is defined %}
     {% if vlan_vars.virtual_gateway_ip %}
 ip virtual-router address {{ vlan_vars.virtual_gateway_ip }}
     {% else %}
 no ip virtual-router address
     {% endif %}
   {% endif %}

   {% if vlan_vars.virtual_gateway_ipv6 is defined %}
     {% if vlan_vars.virtual_gateway_ipv6 %}
 ipv6 virtual-router address {{ vlan_vars.virtual_gateway_ipv6 }}
     {% else %}
 no ipv6 virtual-router address
     {% endif %}
   {% endif %}

    {# Keep member configs in the end as it switches to member interface context #}
    {% if vlan_vars.untagged_members is defined %}
      {% for ports in vlan_vars.untagged_members %}
        {% if ports.port is defined and ports.port %}
          {% if 'range' in ports.port %}
interface {{ ports.port }}
          {% else %}
interface {{ ports.port.split() | join() }}
          {% endif %}
          {% if ports.state is defined and ports.state == "absent" %}
 no switchport access vlan
          {% else %}
 switchport access vlan {{ vlan_id[1] }}
          {% endif %}
        {% endif %}
      {% endfor %}
    {% endif %}
{#

To reduce the number of commands that DellOS has to merge, 
take the YAML and create a reverse mapping of interfaces, and the VLAN
tags that it is associated with.

Create a dictionary with the following structure:

{"<port_name>": {
                 "present": [11,12,13],
                 "absent": [300],
                }
}

#}
    {% if vlan_vars.tagged_members is defined %}
      {% for ports in vlan_vars.tagged_members %}
        {% if ports.port is defined and ports.port %}
          {% if 'range' in ports.port %}
            {% set port_name = ports.port %}
          {% else %}
            {% set port_name = ports.port.split().join() %}
          {% endif %}
          {% if ports.port not in port_map %}
            {# first time we have encountered this port, add it #}
            {% set port_map[port_name] = {"present": [], "absent": []} %}
          {% endif %}
          {% if ports.state is defined and ports.state == "absent" %}
            {% do port_map[port_name]["absent"].append(vlan_id[1]) %}
          {% else %}
            {% do port_map[port_name]["present"].append(vlan_id[1]) %}
          {% endif %}
        {% endif %}
     {% endfor %}
    {% endif %}

  {% endif %}
{% endfor %}
{% endif %}
